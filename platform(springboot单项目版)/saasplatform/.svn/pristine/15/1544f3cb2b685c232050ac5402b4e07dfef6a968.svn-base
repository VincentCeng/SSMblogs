<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.saas.admin.mapper.role.permission.RolePermissionMapper">
	<resultMap id="BaseResultMap"
		type="com.saas.admin.model.role.permission.RolePermission">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="roleId" property="roleId" jdbcType="INTEGER" />
		<result column="permissionId" property="permissionId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, roleId, permissionId
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from role_permission
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from role_permission
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.saas.admin.model.role.permission.RolePermission">
		insert into role_permission (id, roleId, permissionId
		)
		values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER},
		#{permissionId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.saas.admin.model.role.permission.RolePermission">
		insert into role_permission
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="roleId != null">
				roleId,
			</if>
			<if test="permissionId != null">
				permissionId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="permissionId != null">
				#{permissionId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.saas.admin.model.role.permission.RolePermission">
		update role_permission
		<set>
			<if test="roleId != null">
				roleId = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="permissionId != null">
				permissionId = #{permissionId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.saas.admin.model.role.permission.RolePermission">
		update role_permission
		set roleId = #{roleId,jdbcType=INTEGER},
		permissionId = #{permissionId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<resultMap id="rm" type="com.saas.admin.model.role.permission.RolePermission">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="roleId" property="roleId" jdbcType="INTEGER" />
		<association property="permission"
			select="com.saas.admin.mapper.permission.PermissionMapper.load" column="permissionId" />
	</resultMap>
	<select id="findAll" resultMap="rm">
		select
		<include refid="Base_Column_List" />
		from role_permission
	</select>
	<insert id="insertAll">
		insert into role_permission (roleId,permissionId) values
		<foreach collection="permissionIds" item="p" separator=",">
			(#{roleId},#{p})
		</foreach>
	</insert>
	<select id="load" resultMap="rm" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List"/>
		from ec_role_permission
		where id = #{id}
	</select>
	<delete id="deleteByRoleId">
	    delete from role_permission where roleId =#{rid}
	</delete>
	<select id="findByPermissionId" resultType="com.saas.admin.model.role.permission.RolePermission" 
	    parameterType="java.lang.Integer">
		select
		id
		from role_permission
		where permissionId = #{pid} limit 1
	</select>
	<select id="findByRoleId" resultMap="rm" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List"/>
		from role_permission
		where roleId = #{roleId}
	</select>
</mapper>