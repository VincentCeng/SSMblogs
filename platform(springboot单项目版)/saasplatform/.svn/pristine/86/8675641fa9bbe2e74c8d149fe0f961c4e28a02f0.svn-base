package com.saas.admin.controller.error;

import java.io.IOException;
import java.util.Collection;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController;
import org.springframework.boot.web.servlet.error.ErrorAttributes;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.fasterxml.jackson.databind.ObjectMapper;

/**
 * 异常处理器
 * @ClassName: ErrorController 
 * @Description: TODO(这里用一句话描述这个类的作用) 
 * @author Orchid
 * @date 2018年6月21日 下午7:23:02 
 *
 */
@Controller
@RequestMapping(value="error")
public class ErrorController extends AbstractErrorController {

	@Autowired
	ObjectMapper objectMapper;
	
	public ErrorController(ErrorAttributes errorAttributes) {
		super(errorAttributes);
	}

	@RequestMapping("")
	public ModelAndView getErrorPath(HttpServletRequest request
			,HttpServletResponse response) {
		Map<String, Object> model = Collections.unmodifiableMap(getErrorAttributes(
				request, false));
		Throwable cause = getCause(request);
		int status = (int) model.get("status");
		String message = (String) model.get("message");
		String errorMessage = getErrorMessage(cause);
		response.setStatus(status);
		if (!isJsonRequest(request)){
			ModelAndView modelAndView = new ModelAndView("/error.ftl");
			modelAndView.addObject("errorMessage", errorMessage);
			modelAndView.addObject("status", status);
			modelAndView.addObject("cause", cause);
			return modelAndView;
		}else{
			HashMap<Object, Object> error = new HashMap<>();
			error.put("success", false);
			error.put("errorMessage", errorMessage);
			error.put("message", message);
			try {
				response.getWriter().write(error.toString());
			} catch (IOException e) {
				e.printStackTrace();
			}
			return null;
		}
	}

	protected boolean isJsonRequest(HttpServletRequest request) {
		String requestUrl = (String) request.getAttribute("javax.servlet.error.request_uri");
		if (requestUrl != null && requestUrl.endsWith(".json")){
			return true;
		}else {
			return false;
		}
	}

	private String getErrorMessage(Throwable cause) {
//		if (cause instanceof YourApplicationException){
//			return cause.getMessage();
//		}
		return "服务器错误,请联系管理员";
	}

	private Throwable getCause(HttpServletRequest request) {
		Throwable error = (Throwable)request.getAttribute("java.servlet.error.exception");
		if (error != null){
			while (error instanceof ServletException && 
					error.getCause() != null) {
				error = (ServletException)error.getCause();
			}
		}
		return error;
	}

	@Override
	public String getErrorPath() {
		return null;
	}

}
